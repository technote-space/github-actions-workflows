on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "!*"

name: CI

env:
  CI: 1
  COVERAGE: 1
  WORKSPACE: ${{ github.workspace }}

jobs:
  phpcs:
    name: PHP Code Sniffer
    runs-on: ubuntu-latest
    env:
      LINT: 1
    steps:
      - uses: technote-space/auto-cancel-redundant-job@v1
        with:
          EXCLUDE_MERGED: 'true'
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v1
        with:
          SUFFIX_FILTER: .php
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "::set-env name=RUNNING::"
        if: "! env.GIT_DIFF"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
        if: env.RUNNING
      - name: Cache composer modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
        if: env.RUNNING
      - name: Prepare
        run: composer setup
        if: env.RUNNING
      - name: Check code style
        run: composer phpcs
        if: env.RUNNING

  phpmd:
    name: PHPMD
    runs-on: ubuntu-latest
    env:
      LINT: 1
    steps:
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v1
        with:
          SUFFIX_FILTER: .php
          SEPARATOR: ','
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "::set-env name=RUNNING::"
        if: "! env.GIT_DIFF"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
        if: env.RUNNING
      - name: Cache composer modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
        if: env.RUNNING
      - name: Prepare
        run: composer setup
        if: env.RUNNING
      - name: Check code style
        run: composer phpmd
        if: env.RUNNING

  phpunit:
    name: PHPUnit
    needs: [phpcs, phpmd]
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        php: ['7.0', '7.3', '5.6']
        include:
          - php: '7.3'
            SEND_CODECOV: 1
    steps:
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v1
        with:
          PREFIX_FILTER: |
            configs/
            src/
            tests/
          SUFFIX_FILTER: .php
          FILES: composer.lock
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "::set-env name=RUNNING::"
        if: "! env.GIT_DIFF"
      - name: Set running flag
        if: matrix.SEND_CODECOV == 1 && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        run: echo "::set-env name=RUNNING::1"
      - name: Set running flag
        if: matrix.SEND_CODECOV == 1 && startsWith(github.ref, 'refs/tags/')
        run: echo "::set-env name=RUNNING::1"
      - name: Set running flag
        run: |
          if [[ ! -f composer.json ]] || ! < composer.json jq -r '.scripts | keys[]' | grep -qe '^phpunit$'; then
            echo "::set-env name=RUNNING::"
          fi

      - name: Switch PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
        if: env.RUNNING
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
        if: env.RUNNING
      - name: Cache composer modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
        if: env.RUNNING
      - name: Prepare
        run: composer setup
        if: env.RUNNING
      - name: Run tests
        run: composer phpunit
        if: env.RUNNING
      - name: Codecov
        run: |
          if [ -n "$CODECOV_TOKEN" ]; then
            curl -s https://codecov.io/bash | bash -s -- -t $CODECOV_TOKEN -f $COVERAGE_FILE
          fi
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          COVERAGE_FILE: ./coverage/clover.xml
        if: env.RUNNING && matrix.SEND_CODECOV == 1

  pages:
    name: Publish GitHub Pages
    needs: phpunit
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    env:
      GH_PAGES_DIR: public/gh-pages
    steps:
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Set running flag
        run: |
          if [[ ! -f composer.json ]] || ! < composer.json jq -r '.scripts | keys[]' | grep -qe '^bin:gh-pages$'; then
            echo "::set-env name=RUNNING::"
          fi

      - name: Get Yarn Cache Directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
        if: env.RUNNING
      - name: Cache node dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        if: env.RUNNING
      - name: Build
        run: composer bin:gh-pages
        env:
          GH_PAGES_BASE:
          GH_PAGES_TRACKING_ID: UA-78163306-3
        if: env.RUNNING
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: public/gh-pages
        if: env.RUNNING

  publishRelease:
    name: Create Release
    needs: [pages]
    runs-on: ubuntu-latest
    steps:
      - name: Get version
        run: echo "::set-env name=TAG_NAME::${HEAD_REF#refs/tags/}"
        env:
          HEAD_REF: ${{ github.ref }}
      - name: Create Release
        id: drafter
        uses: technote-space/release-drafter@v6
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          DRAFT: false
          NAME: ${{ env.TAG_NAME }}
          TAG: ${{ env.TAG_NAME }}
      - uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          text: ${{ format('<{0}>', steps.drafter.outputs.html_url) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success() && env.SLACK_WEBHOOK_URL

  slack:
    name: Slack
    needs: publishRelease
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: 8398a7/action-slack@v2
        with:
          status: failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: env.WORKFLOW_CONCLUSION == 'failure' && env.SLACK_WEBHOOK_URL
