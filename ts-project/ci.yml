on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

name: CI

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
      - name: Set running flag
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v5
        with:
          PATTERNS: src/**/*.+(js|ts|jsx|tsx)
          FILES: |
            yarn.lock
            .eslintrc.json
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "RUNNING=" >> $GITHUB_ENV
        if: "! env.GIT_DIFF"

      - name: Check code style
        run: |
          yarn
          yarn lint
        if: env.RUNNING

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
      - name: Set running flag
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v5
        with:
          PATTERNS: src/**/*.+(js|ts|jsx|tsx)
          FILES: |
            yarn.lock
            tsconfig.json
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "RUNNING=" >> $GITHUB_ENV
        if: "! env.GIT_DIFF"

      - name: Type check
        run: |
          yarn
          yarn typecheck
        if: env.RUNNING

  cover:
    name: Coverage
    needs: [eslint, typecheck]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        node: ['16']
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - name: Set running flag
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v5
        with:
          PATTERNS: src/**/*.+(js|ts|jsx|tsx|snap)
          FILES: |
            yarn.lock
            jest.config.ts
            jest.global.setup.ts
            jest.setup.ts
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "RUNNING=" >> $GITHUB_ENV
        if: "! env.GIT_DIFF"
      - name: Set running flag
        if: "matrix.node == '16' && ! startsWith(github.ref, 'refs/tags/') && github.event.base_ref == format('refs/heads/{0}', github.event.repository.default_branch)"
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - name: Set running flag
        if: matrix.node == '16' && startsWith(github.ref, 'refs/tags/v')
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - name: Set running flag
        run: |
          if [[ ! -f package.json ]] || ! < package.json jq -r '.scripts | keys[]' | grep -qe '^cover$'; then
            echo "RUNNING=" >> $GITHUB_ENV
          fi

      - name: Run tests
        run: |
          yarn
          yarn cover
        if: env.RUNNING
      - name: Codecov
        run: |
          if [ -n "$CODECOV_TOKEN" ]; then
            curl -s https://codecov.io/bash | bash -s -- -t $CODECOV_TOKEN -f $COVERAGE_FILE
          fi
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          COVERAGE_FILE: ./coverage/lcov.info
        if: env.RUNNING && matrix.node == '16'

  publishRelease:
    name: Create Release
    needs: cover
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Get version
        run: echo "TAG_NAME=${HEAD_REF#refs/tags/}" >> $GITHUB_ENV
        env:
          HEAD_REF: ${{ github.ref }}
      - name: Create Release
        id: drafter
        uses: technote-space/release-drafter@v6
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          DRAFT: false
          NAME: ${{ env.TAG_NAME }}
          TAG: ${{ env.TAG_NAME }}
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: ${{ format('<{0}>', steps.drafter.outputs.html_url) }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success() && env.SLACK_WEBHOOK_URL

  slack:
    name: Slack
    needs: publishRelease
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: 8398a7/action-slack@v3
        with:
          status: failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: env.WORKFLOW_CONCLUSION == 'failure' && env.SLACK_WEBHOOK_URL
